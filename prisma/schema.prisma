generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String?
  name      String
  games     Game[]  @relation("UserGames")
  attendees Attendee[]
  accounts  Account[]
  image     String?

  @@map("users") // Java = @Table("users")
}

model Account {
  id                 Int     @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Game {
  id          Int      @id @default(autoincrement())
  hostId      Int
  host        User     @relation("UserGames", fields: [hostId], references: [id])
  dateTime    DateTime
  maxPlayers  Int
  address     String
  attendees   Attendee[]
  createdAt   DateTime @default(now())

  @@map("games") // Java = @Table("games")
}

model Attendee {
  id         Int      @id @default(autoincrement())
  gameId     Int
  userId     Int
  game       Game     @relation(fields: [gameId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  waitlist   Boolean  @default(false)
  signedUpAt DateTime @default(now())

  @@unique([gameId, userId])

  @@map("attendees") // Java = @Table("attendees")
}

